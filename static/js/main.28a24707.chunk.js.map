{"version":3,"sources":["app/lesson/lesson1/InputNumber.tsx","app/lesson/lesson1/Lesson1.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["InputNumber","props","useState","answer","setAnswer","resalt","setResalt","type","name","placeholder","onChange","e","Number","target","value","onClick","correctAnswer","Lesson1","useEffect","Math","floor","random","className","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iLAwCeA,EAtCK,SAACC,GAEjB,MAA4BC,mBAAS,GAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAoBA,OACI,gCACI,4BAAID,IACA,uBACIE,KAAK,SACLC,KAAK,SACLC,YAAY,iGACZC,SAAU,SAACC,GAAD,OAAOP,EAAUQ,OAAOD,EAAEE,OAAOC,WAGnD,wBAAQC,QAAS,WA3BlB,EAAIZ,GAAUA,EAAS,IACtBG,EAAU,gHAIXL,EAAMe,gBAAkBb,EAGlBF,EAAMe,cAAgBb,EAC3BG,EAAU,0GAELL,EAAMe,cAAgBb,GAC3BG,EAAU,0GANVA,EAAU,uBAqBV,8BCfGW,EAjBC,WAEZ,MAAkCf,mBAAS,GAA3C,mBAAOc,EAAP,KAAqBZ,EAArB,KAMA,OAJAc,qBAAU,WACNd,EAAUe,KAAKC,MAAuB,IAAhBD,KAAKE,UAAmB,KAChD,IAGE,sBAAKC,UAAU,UAAf,UACI,sEACA,uBACA,cAAC,EAAD,CAAaN,cAAeA,QCLzBO,EANE,WACf,OACE,cAAC,EAAD,KCQWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.28a24707.chunk.js","sourcesContent":["import { useState } from \"react\";\r\n\r\nconst InputNumber = (props: any) => {\r\n\r\n    const [answer, setAnswer] = useState(0);\r\n    const [resalt, setResalt] = useState(\"\");\r\n\r\n    const isAnswer = () =>{\r\n        if(0 > answer || answer > 100){\r\n            setResalt(\"正しい範囲の数字を入力してください。\");\r\n            return;\r\n        }\r\n\r\n        if(props.correctAnswer === answer){\r\n            setResalt(\"正解！\");\r\n            return;\r\n        }else if(props.correctAnswer > answer){\r\n            setResalt(\"入力した数字よりも大きい数字です。\");\r\n            return;\r\n        }else if(props.correctAnswer < answer){\r\n            setResalt(\"入力した数字よりも小さい数字です。\");\r\n            return;\r\n        }\r\n    }\r\n\r\n    return(\r\n        <div>\r\n            <p>{resalt}</p>\r\n                <input \r\n                    type=\"number\" \r\n                    name=\"answer\" \r\n                    placeholder=\"0～100までの数字を入力してください\"\r\n                    onChange={(e) => setAnswer(Number(e.target.value)\r\n                    )}>\r\n                </input>\r\n            <button onClick={() => isAnswer()}>回答</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default InputNumber;","import { useState ,useEffect} from \"react\";\r\nimport InputNumber from \"./InputNumber\";\r\n\r\nconst Lesson1 = () => {\r\n\r\n    const [correctAnswer,setAnswer] = useState(0);\r\n\r\n    useEffect(() => {\r\n        setAnswer(Math.floor( Math.random() * 100 ) + 1)\r\n    },[])\r\n\r\n    return (\r\n        <div className=\"kazuate\">\r\n            <h1>数あてゲーム</h1>\r\n            <h2></h2>\r\n            <InputNumber correctAnswer={correctAnswer}/>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Lesson1;","import Sample1 from 'app/sample/sample1/Sample1';\r\nimport Lesson1 from 'app/lesson/lesson1/Lesson1';\r\nimport { VFC } from 'react';\r\n\r\nconst App: VFC = () => {\r\n  return (\r\n    <Lesson1 />\r\n  )\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}